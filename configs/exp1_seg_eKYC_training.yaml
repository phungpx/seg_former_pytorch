data:
  test:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.ekyc_dataset
        class: EKYCDataset
        EKYCDataset:
          image_dirs:
            - '''/extdata/ocr/quann7/projects/ekyc/dataset/16082022'''
          mode: '''test'''
          image_extents:
            - '''*.*g'''
            - '''*.*G'''
          label_extents: 
            - '''*.json'''
          classes:
            BLX: [[229, 255, 0], 1]
            BLX_BACK: [[0, 179, 255], 1]
            BLX_OLD: [[0, 255, 208], 1]
            BLX_BACK_OLD: [[252, 3, 219], 1]
            CMND: [[252, 3, 69], 1]
            CMND_BACK: [[0, 64, 128], 1]
            CCCD: [[0, 0, 255], 1]
            CCCD_BACK: [[0, 255, 0], 1]
            CMCC: [[255, 0, 0], 1]
            CCCD_front_chip: [[128, 192, 0], 1]
            CCCD_back_chip: [[0, 128, 128], 1]
            CMQD_A: [[128, 3, 69], 1]
            CMQD_A_BACK: [[0, 255, 255], 1]
            CMQD_B: [[255, 255, 0], 1]
            CMQD_B_BACK: [[255, 0, 255], 1]
            CMQD_C_BACK: [[128, 69, 69], 1]
            CMQD_D: [[255, 69, 69], 1]
            CMQD_A: [[69, 255, 0], 1]
            CMQD_D_BACK: [[128, 255, 69], 1]
            CMQD_B_VT: [[128, 69, 255], 1]
            CMQD_B_VT_BACK: [[128, 128, 128], 1]
            PASSPORT: [[69, 69, 69], 1]
            PASSPORT_OTHER: [[3, 3, 3], 1]
          imsize: (512, 512)
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      batch_size: 16
      shuffle: False
      pin_memory: True
      num_workers: 12
      drop_last: False

data:
  train:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.ekyc_dataset
        class: EKYCDataset
        EKYCDataset:
          image_dirs:
            - '''/extdata/ocr/quann7/projects/ekyc/dataset/16082022'''
          mode: '''train'''
          image_extents:
            - '''*.*g'''
            - '''*.*G'''
          label_extents: 
            - '''*.json'''
          classes:
            BLX: [[229, 255, 0], 1]
            BLX_BACK: [[0, 179, 255], 1]
            BLX_OLD: [[0, 255, 208], 1]
            BLX_BACK_OLD: [[252, 3, 219], 1]
            CMND: [[252, 3, 69], 1]
            CMND_BACK: [[0, 64, 128], 1]
            CCCD: [[0, 0, 255], 1]
            CCCD_BACK: [[0, 255, 0], 1]
            CMCC: [[255, 0, 0], 1]
            CCCD_front_chip: [[128, 192, 0], 1]
            CCCD_back_chip: [[0, 128, 128], 1]
            CMQD_A: [[128, 3, 69], 1]
            CMQD_A_BACK: [[0, 255, 255], 1]
            CMQD_B: [[255, 255, 0], 1]
            CMQD_B_BACK: [[255, 0, 255], 1]
            CMQD_C_BACK: [[128, 69, 69], 1]
            CMQD_D: [[255, 69, 69], 1]
            CMQD_A: [[69, 255, 0], 1]
            CMQD_D_BACK: [[128, 255, 69], 1]
            CMQD_B_VT: [[128, 69, 255], 1]
            CMQD_B_VT_BACK: [[128, 128, 128], 1]
            PASSPORT: [[69, 69, 69], 1]
            PASSPORT_OTHER: [[3, 3, 3], 1]
          imsize: (512, 512)
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
          transforms:
            - iaa.Add(value=(-50, 50), per_channel=True)
            - iaa.GaussianBlur(sigma=(0, 1))
            - iaa.MotionBlur()
            - iaa.Affine(rotate=(0, 45), shear=(-5, 5), fit_output=True)
            - iaa.PerspectiveTransform(scale=(0, 0.1))
            - iaa.ChangeColorTemperature()
            - iaa.Clouds()
          require_transforms:
            - iaa.Grayscale()
      batch_size: 16
      shuffle: True
      pin_memory: True
      num_workers: 12
      drop_last: False

  train_eval:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.ekyc_dataset
        class: EKYCDataset
        EKYCDataset:
          image_dirs:
            - '''/extdata/ocr/quann7/projects/ekyc/dataset/16082022'''
          mode: '''train'''
          image_extents:
            - '''*.*g'''
            - '''*.*G'''
          label_extents: 
            - '''*.json'''
          classes:
            BLX: [[229, 255, 0], 1]
            BLX_BACK: [[0, 179, 255], 1]
            BLX_OLD: [[0, 255, 208], 1]
            BLX_BACK_OLD: [[252, 3, 219], 1]
            CMND: [[252, 3, 69], 1]
            CMND_BACK: [[0, 64, 128], 1]
            CCCD: [[0, 0, 255], 1]
            CCCD_BACK: [[0, 255, 0], 1]
            CMCC: [[255, 0, 0], 1]
            CCCD_front_chip: [[128, 192, 0], 1]
            CCCD_back_chip: [[0, 128, 128], 1]
            CMQD_A: [[128, 3, 69], 1]
            CMQD_A_BACK: [[0, 255, 255], 1]
            CMQD_B: [[255, 255, 0], 1]
            CMQD_B_BACK: [[255, 0, 255], 1]
            CMQD_C_BACK: [[128, 69, 69], 1]
            CMQD_D: [[255, 69, 69], 1]
            CMQD_A: [[69, 255, 0], 1]
            CMQD_D_BACK: [[128, 255, 69], 1]
            CMQD_B_VT: [[128, 69, 255], 1]
            CMQD_B_VT_BACK: [[128, 128, 128], 1]
            PASSPORT: [[69, 69, 69], 1]
            PASSPORT_OTHER: [[3, 3, 3], 1]
          imsize: (512, 512)
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      batch_size: 16
      shuffle: False
      pin_memory: True
      num_workers: 12
      drop_last: False

  valid:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.ekyc_dataset
        class: EKYCDataset
        EKYCDataset:
          image_dirs:
            - '''/extdata/ocr/quann7/projects/ekyc/dataset/16082022'''
          mode: '''valid'''
          image_extents:
            - '''*.*g'''
            - '''*.*G'''
          label_extents: 
            - '''*.json'''
          classes:
            BLX: [[229, 255, 0], 1]
            BLX_BACK: [[0, 179, 255], 1]
            BLX_OLD: [[0, 255, 208], 1]
            BLX_BACK_OLD: [[252, 3, 219], 1]
            CMND: [[252, 3, 69], 1]
            CMND_BACK: [[0, 64, 128], 1]
            CCCD: [[0, 0, 255], 1]
            CCCD_BACK: [[0, 255, 0], 1]
            CMCC: [[255, 0, 0], 1]
            CCCD_front_chip: [[128, 192, 0], 1]
            CCCD_back_chip: [[0, 128, 128], 1]
            CMQD_A: [[128, 3, 69], 1]
            CMQD_A_BACK: [[0, 255, 255], 1]
            CMQD_B: [[255, 255, 0], 1]
            CMQD_B_BACK: [[255, 0, 255], 1]
            CMQD_C_BACK: [[128, 69, 69], 1]
            CMQD_D: [[255, 69, 69], 1]
            CMQD_A: [[69, 255, 0], 1]
            CMQD_D_BACK: [[128, 255, 69], 1]
            CMQD_B_VT: [[128, 69, 255], 1]
            CMQD_B_VT_BACK: [[128, 128, 128], 1]
            PASSPORT: [[69, 69, 69], 1]
            PASSPORT_OTHER: [[3, 3, 3], 1]
          imsize: (512, 512)
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      batch_size: 16
      shuffle: False
      pin_memory: True
      num_workers: 12
      drop_last: False

loss:
  module: flame.core.loss.OHEM_cross_entropy
  class: OHEMCrossEntropy
  OHEMCrossEntropy:
    ignore_label: 255
    weight: None
    thresh: 0.7
    output_transform: 'lambda x: (x[0], x[1])'

model:
  module: flame.core.model.segformer
  class: Model
  Model:
    backbone_pretrained: '''checkpoints/segformer.b0.512x512.ade.160k.pth'''
    pretrained: null
    version: '''B0'''
    num_classes: 2

optim:
  module: torch.optim
  class: AdamW
  AdamW:
    params: config['model'].parameters()
    lr: 0.01
    weight_decay: 0.01

train_evaluator:
  module: flame.handlers.metric_evaluator
  class: MetricEvaluator
  MetricEvaluator:
    dataset: config['data']['train_eval']
    device: '''cuda'''

valid_evaluator:
  module: flame.handlers.metric_evaluator
  class: MetricEvaluator
  MetricEvaluator:
    dataset: config['data']['valid']
    device: '''cuda'''

metrics:
  module: flame.handlers.metric_evaluator
  class: Metrics
  Metrics:
    metrics:
      OHEM_ce_loss:
        module: flame.core.metric.loss
        class: Loss
        Loss:
          loss_fn: config['loss']
          output_transform: 'lambda x: (x[0], x[1])'
      Dices:
        module: ignite.metrics
        class: DiceCoefficient
        DiceCoefficient:
          cm:
            module: ignite.metrics.confusion_matrix
            class: ConfusionMatrix
            ConfusionMatrix:
              num_classes: 2
              average: None
              output_transform: 'lambda x: (x[0], x[1])'
              device: '''cuda'''
          ignore_index: 0  # background
      IoU:
        module: ignite.metrics
        class: IoU
        IoU:
          cm:
            module: ignite.metrics.confusion_matrix
            class: ConfusionMatrix
            ConfusionMatrix:
              num_classes: 2
              average: None
              output_transform: 'lambda x: (x[0], x[1])'
              device: '''cuda'''
          ignore_index: 0  # background
      mIoU:
        module: ignite.metrics.metrics_lambda
        class: MetricsLambda
        MetricsLambda:
          f: 'lambda IoUs: IoUs.mean()'
          IoUs:
            module: ignite.metrics
            class: IoU
            IoU:
              cm:
                module: ignite.metrics.confusion_matrix
                class: ConfusionMatrix
                ConfusionMatrix:
                  num_classes: 2
                  average: None
                  output_transform: 'lambda x: (x[0], x[1])'
                  device: '''cuda'''
              ignore_index: 0  # background
      mDice:
        module: ignite.metrics.metrics_lambda
        class: MetricsLambda
        MetricsLambda:
          f: 'lambda Dices: Dices.mean()'
          Dices:
            module: ignite.metrics
            class: DiceCoefficient
            DiceCoefficient:
              cm:
                module: ignite.metrics.confusion_matrix
                class: ConfusionMatrix
                ConfusionMatrix:
                  num_classes: 2
                  average: None
                  output_transform: 'lambda x: (x[0], x[1])'
                  device: '''cuda'''
              ignore_index: 0  # background
    attach_to:
      train_evaluator: '''train'''
      valid_evaluator: '''valid'''

predictor:
  module: flame.handlers.region_predictor
  class: RegionPredictor
  RegionPredictor:
    evaluator_name: '''valid_evaluator'''
    output_dir: '''checkpoint/EKYC/valid'''
    output_img_ext: '''.*g'''
    output_mask_ext: '''.png'''
    classes:
      # color, class_idx, area_threshold
      BLX: [[229, 255, 0], 1, 0.]
      BLX_BACK: [[0, 179, 255], 1, 0.]
      BLX_OLD: [[0, 255, 208], 1, 0.]
      BLX_BACK_OLD: [[252, 3, 219], 1, 0.]
      CMND: [[252, 3, 69], 1, 0.]
      CMND_BACK: [[0, 64, 128], 1, 0.]
      CCCD: [[0, 0, 255], 1, 0.]
      CCCD_BACK: [[0, 255, 0], 1, 0.]
      CMCC: [[255, 0, 0], 1, 0.]
      CCCD_front_chip: [[128, 192, 0], 1, 0.]
      CCCD_back_chip: [[0, 128, 128], 1, 0.]
      CMQD_A: [[128, 3, 69], 1, 0.]
      CMQD_A_BACK: [[0, 255, 255], 1, 0.]
      CMQD_B: [[255, 255, 0], 1, 0.]
      CMQD_B_BACK: [[255, 0, 255], 1, 0.]
      CMQD_C_BACK: [[128, 69, 69], 1, 0.]
      CMQD_D: [[255, 69, 69], 1, 0.]
      CMQD_A: [[69, 255, 0], 1, 0.]
      CMQD_D_BACK: [[128, 255, 69], 1, 0.]
      CMQD_B_VT: [[128, 69, 255], 1, 0.]
      CMQD_B_VT_BACK: [[128, 128, 128], 1, 0.]
      PASSPORT: [[69, 69, 69], 1, 0.]
      PASSPORT_OTHER: [[3, 3, 3], 1, 0.]
    output_transform: 'lambda x: (torch.nn.Softmax(dim=1)(x[0]).round(), x[-1])'

writer:
  module: flame.handlers.tensorboard
  class: TensorBoard
  TensorBoard:
    logdir: '''checkpoint/EKYC/'''

logger:
  module: flame.handlers.logger
  class: Logger
  Logger:
    logdir: '''checkpoint/EKYC/'''
    logname: '''EKYC'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    classes:
      - '''BLX'''
      - '''BLX_BACK'''
      - '''BLX_OLD'''
      - '''BLX_BACK_OLD'''
      - '''CMND'''
      - '''CMND_BACK'''
      - '''CCCD'''
      - '''CCCD_BACK'''
      - '''CMCC'''
      - '''CCCD_front_chip'''
      - '''CCCD_back_chip'''
      - '''CMQD_A'''
      - '''CMQD_A_BACK'''
      - '''CMQD_B'''
      - '''CMQD_B_BACK'''
      - '''CMQD_C_BACK'''
      - '''CMQD_D'''
      - '''CMQD_A'''
      - '''CMQD_D_BACK'''
      - '''CMQD_B_VT'''
      - '''CMQD_B_VT_BACK'''
      - '''PASSPORT'''
      - '''PASSPORT_OTHER'''
    eval_names:
      - '''train'''
      - '''valid'''

history:
  module: flame.handlers.checkpoint
  class: History

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: ''''''
    mode: '''train'''

terminate_on_nan:
  module: flame.handlers.terminate_on_nan
  class: TerminateOnNan

lr_scheduler:
  module: flame.handlers.lr_scheduler
  class: LRScheduler
  LRScheduler:
    score_name: '''OHEM_ce_loss'''
    evaluator_name: '''valid_evaluator'''
    scheduler:
      module: flame.handlers.lr_schedulers
      class: WarmupPolyLR
      WarmupPolyLR:
        optimizer: config['optim']
        data_loader: config['data']['train']
        max_epochs: config['engine']['Trainer']['max_epochs']
        power: 0.9
        warmup_scale: 10
        warmup_ratio: 0.1
        warmup: '''exp'''
        last_epoch: -1

# early_stopping:
#   module: flame.handlers.early_stopping
#   class: EarlyStopping
#   EarlyStopping:
#     score_name: '''OHEM_ce_loss'''
#     evaluator_name: '''valid_evaluator'''
#     mode: '''min'''
#     patience: 20

best_saver:
  module: flame.handlers.checkpoint
  class: BestSaver
  BestSaver:
    dirname: '''checkpoint/EKYC/'''
    score_name: '''OHEM_ce_loss'''
    evaluator_name: '''valid_evaluator'''
    mode: '''min'''
    n_saved: 1

backup_saver:
  module: flame.handlers.checkpoint
  class: BackupSaver
  BackupSaver:
    modules:
      - '''model'''
      - '''optim'''
      - '''backup_saver'''
      - '''best_saver'''
      - '''history'''
      - '''lr_scheduler'''
      # - '''early_stopping'''
    dirname: '''checkpoint/EKYC/'''
    save_interval: 1
    n_saved: 1

engine:
  module: flame.core.engine.engine
  class: Trainer
  Trainer:
    dataset: config['data']['train']
    device: '''cuda'''
    max_epochs: 10000

extralibs:
  iaa: imgaug.augmenters
  torch: torch
